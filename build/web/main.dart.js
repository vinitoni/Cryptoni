// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const app_bar_theme = flutter_sdk.src__material__app_bar_theme;
  const icon_theme_data = flutter_sdk.src__widgets__icon_theme_data;
  const bottom_navigation_bar_theme = flutter_sdk.src__material__bottom_navigation_bar_theme;
  const framework = flutter_sdk.src__widgets__framework;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const basic = flutter_sdk.src__widgets__basic;
  const flex = flutter_sdk.src__rendering__flex;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const text = flutter_sdk.src__widgets__text;
  const text_style = flutter_sdk.src__painting__text_style;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page = flutter_sdk.src__material__page;
  const bottom_navigation_bar = flutter_sdk.src__material__bottom_navigation_bar;
  const bottom_navigation_bar_item = flutter_sdk.src__widgets__bottom_navigation_bar_item;
  const card = flutter_sdk.src__material__card;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const gesture_detector = flutter_sdk.src__widgets__gesture_detector;
  const list_tile = flutter_sdk.src__material__list_tile;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const binding = flutter_sdk.src__widgets__binding;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var crypto_font_icons = Object.create(dart.library);
  var crypto_font_icon_data = Object.create(dart.library);
  var $toString = dartx.toString;
  var $startsWith = dartx.startsWith;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextToDetailScreen: () => (T.BuildContextToDetailScreen = dart.constFn(dart.fnType(main.DetailScreen, [framework.BuildContext])))(),
    JSArrayOfBottomNavigationBarItem: () => (T.JSArrayOfBottomNavigationBarItem = dart.constFn(_interceptors.JSArray$(bottom_navigation_bar_item.BottomNavigationBarItem)))(),
    VoidToNvoid: () => (T.VoidToNvoid = dart.constFn(dart.nullable(T.VoidTovoid())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61440
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61441
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61442
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61443
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61444
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61445
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61446
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61447
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61448
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61449
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61450
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61451
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61452
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61453
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61454
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61455
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61456
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61457
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61458
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61459
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61460
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61461
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61462
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61463
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61464
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61465
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61466
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61467
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61468
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61469
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61470
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61471
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61472
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61473
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61474
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61475
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61476
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61477
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61478
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61479
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61480
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61481
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61482
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61483
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61484
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61485
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61486
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61487
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61488
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61489
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61490
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61491
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61492
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61493
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61494
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61495
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61496
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61497
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61498
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61499
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61500
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61501
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61502
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61503
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61504
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61505
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61506
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61507
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61508
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61509
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61510
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61511
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61512
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61513
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61514
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61515
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61516
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61517
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61518
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61519
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61520
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61521
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61522
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61523
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61524
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61525
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61526
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: crypto_font_icon_data.CryptoFontIconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "crypto_font_icons",
        [IconData_fontFamily]: "CryptoFont",
        [IconData_codePoint]: 61527
      });
    }
  }, false);
  var C = Array(90).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:crypto_font_icons/crypto_font_icons.dart",
    "package:crypto_font_icons/crypto_font_icon_data.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    build(context) {
      return new app.MaterialApp.new({debugShowCheckedModeBanner: false, title: "Cryptoni", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.blue, appBarTheme: new app_bar_theme.AppBarTheme.new({color: colors.Colors.white, iconTheme: new icon_theme_data.IconThemeData.new({color: colors.Colors.grey._get(700)})}), bottomNavigationBarTheme: new bottom_navigation_bar_theme.BottomNavigationBarThemeData.new({backgroundColor: colors.Colors.white, unselectedItemColor: colors.Colors.grey._get(700)})}), home: new main.WalletScreen.new()});
    }
    static ['_#new#tearOff']() {
      return new main.MyApp.new();
    }
  };
  (main.MyApp.new = function() {
    main.MyApp.__proto__.new.call(this);
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.WalletScreen = class WalletScreen extends framework.StatelessWidget {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new icon.Icon.new(icons.Icons.menu, {color: colors.Colors.grey._get(700)}), new text.Text.new("Carteira", {style: new text_style.TextStyle.new({color: colors.Colors.grey._get(700)})}), new icon.Icon.new(icons.Icons.more_vert, {color: colors.Colors.grey._get(700)})])})}), body: new scroll_view.ListView.new({children: T.JSArrayOfWidget().of([new main.BalanceCard.new(), new main.CryptoCard.new({cryptoName: "BTC", amountOwned: "3.529020", usdValue: "19,153", percentageChange: "8.23%", cryptoIcon: crypto_font_icons.CryptoFontIcons.BTC, onTap: dart.fn(() => {
                navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => new main.DetailScreen.new({cryptoName: "BTC", cryptoIcon: crypto_font_icons.CryptoFontIcons.BTC}), T.BuildContextToDetailScreen())}));
              }, T.VoidToNull())}), new main.CryptoCard.new({cryptoName: "ETH", amountOwned: "12.33368", usdValue: "4,082", percentageChange: "8.07%", cryptoIcon: crypto_font_icons.CryptoFontIcons.ETH, onTap: dart.fn(() => {
                navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => new main.DetailScreen.new({cryptoName: "ETH", cryptoIcon: crypto_font_icons.CryptoFontIcons.ETH}), T.BuildContextToDetailScreen())}));
              }, T.VoidToNull())}), new main.CryptoCard.new({cryptoName: "XRP", amountOwned: "1911.33368", usdValue: "599", percentageChange: "-13.6%", cryptoIcon: crypto_font_icons.CryptoFontIcons.XRP, onTap: dart.fn(() => {
                navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => new main.DetailScreen.new({cryptoName: "XRP", cryptoIcon: crypto_font_icons.CryptoFontIcons.XRP}), T.BuildContextToDetailScreen())}));
              }, T.VoidToNull())})])}), bottomNavigationBar: new bottom_navigation_bar.BottomNavigationBar.new({unselectedItemColor: colors.Colors.grey, selectedItemColor: colors.Colors.black, items: T.JSArrayOfBottomNavigationBarItem().of([new bottom_navigation_bar_item.BottomNavigationBarItem.new({icon: new icon.Icon.new(icons.Icons.account_balance_wallet, {color: colors.Colors.grey._get(700)}), label: "Carteira"}), new bottom_navigation_bar_item.BottomNavigationBarItem.new({icon: new icon.Icon.new(icons.Icons.search), label: "Buscar"}), new bottom_navigation_bar_item.BottomNavigationBarItem.new({icon: new icon.Icon.new(icons.Icons.notifications), label: "Notificações"}), new bottom_navigation_bar_item.BottomNavigationBarItem.new({icon: new icon.Icon.new(icons.Icons.settings), label: "Configurações"})])})});
    }
    static ['_#new#tearOff']() {
      return new main.WalletScreen.new();
    }
  };
  (main.WalletScreen.new = function() {
    main.WalletScreen.__proto__.new.call(this);
    ;
  }).prototype = main.WalletScreen.prototype;
  dart.addTypeTests(main.WalletScreen);
  dart.addTypeCaches(main.WalletScreen);
  dart.setMethodSignature(main.WalletScreen, () => ({
    __proto__: dart.getMethods(main.WalletScreen.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.WalletScreen, I[0]);
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  main.BalanceCard = class BalanceCard extends framework.StatelessWidget {
    build(context) {
      return new card.Card.new({child: new basic.Padding.new({padding: C[1] || CT.C1, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new text.Text.new("Total da Carteira", {style: new text_style.TextStyle.new({fontSize: 24})}), new icon.Icon.new(icons.Icons.account_balance_wallet, {color: colors.Colors.grey._get(700)})])}), new basic.SizedBox.new({height: 10}), new text.Text.new("$39,584", {style: new text_style.TextStyle.new({fontSize: 40, fontWeight: ui.FontWeight.bold})}), new text.Text.new("7.25132 BTC", {style: new text_style.TextStyle.new({fontSize: 20})}), new text.Text.new("+3.56%", {style: new text_style.TextStyle.new({fontSize: 20, color: colors.Colors.green})})])})})});
    }
    static ['_#new#tearOff']() {
      return new main.BalanceCard.new();
    }
  };
  (main.BalanceCard.new = function() {
    main.BalanceCard.__proto__.new.call(this);
    ;
  }).prototype = main.BalanceCard.prototype;
  dart.addTypeTests(main.BalanceCard);
  dart.addTypeCaches(main.BalanceCard);
  dart.setMethodSignature(main.BalanceCard, () => ({
    __proto__: dart.getMethods(main.BalanceCard.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.BalanceCard, I[0]);
  var cryptoName$ = dart.privateName(main, "CryptoCard.cryptoName");
  var amountOwned$ = dart.privateName(main, "CryptoCard.amountOwned");
  var usdValue$ = dart.privateName(main, "CryptoCard.usdValue");
  var percentageChange$ = dart.privateName(main, "CryptoCard.percentageChange");
  var cryptoIcon$ = dart.privateName(main, "CryptoCard.cryptoIcon");
  var onTap$ = dart.privateName(main, "CryptoCard.onTap");
  main.CryptoCard = class CryptoCard extends framework.StatelessWidget {
    get cryptoName() {
      return this[cryptoName$];
    }
    set cryptoName(value) {
      super.cryptoName = value;
    }
    get amountOwned() {
      return this[amountOwned$];
    }
    set amountOwned(value) {
      super.amountOwned = value;
    }
    get usdValue() {
      return this[usdValue$];
    }
    set usdValue(value) {
      super.usdValue = value;
    }
    get percentageChange() {
      return this[percentageChange$];
    }
    set percentageChange(value) {
      super.percentageChange = value;
    }
    get cryptoIcon() {
      return this[cryptoIcon$];
    }
    set cryptoIcon(value) {
      super.cryptoIcon = value;
    }
    get onTap() {
      return this[onTap$];
    }
    set onTap(value) {
      super.onTap = value;
    }
    static ['_#new#tearOff'](opts) {
      let cryptoName = opts && 'cryptoName' in opts ? opts.cryptoName : null;
      let amountOwned = opts && 'amountOwned' in opts ? opts.amountOwned : null;
      let usdValue = opts && 'usdValue' in opts ? opts.usdValue : null;
      let percentageChange = opts && 'percentageChange' in opts ? opts.percentageChange : null;
      let cryptoIcon = opts && 'cryptoIcon' in opts ? opts.cryptoIcon : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      return new main.CryptoCard.new({cryptoName: cryptoName, amountOwned: amountOwned, usdValue: usdValue, percentageChange: percentageChange, cryptoIcon: cryptoIcon, onTap: onTap});
    }
    build(context) {
      return new gesture_detector.GestureDetector.new({onTap: T.VoidToNvoid().as(this.onTap), child: new card.Card.new({child: new list_tile.ListTile.new({leading: new icon.Icon.new(this.cryptoIcon, {color: colors.Colors.grey._get(700)}), title: new text.Text.new(this.cryptoName), subtitle: new text.Text.new(this.amountOwned + " " + this.cryptoName + " = " + this.usdValue + " USD"), trailing: new text.Text.new(this.percentageChange, {style: new text_style.TextStyle.new({color: this.percentageChange[$startsWith]("-") ? colors.Colors.red : colors.Colors.green})})})})});
    }
  };
  (main.CryptoCard.new = function(opts) {
    let cryptoName = opts && 'cryptoName' in opts ? opts.cryptoName : null;
    let amountOwned = opts && 'amountOwned' in opts ? opts.amountOwned : null;
    let usdValue = opts && 'usdValue' in opts ? opts.usdValue : null;
    let percentageChange = opts && 'percentageChange' in opts ? opts.percentageChange : null;
    let cryptoIcon = opts && 'cryptoIcon' in opts ? opts.cryptoIcon : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    this[cryptoName$] = cryptoName;
    this[amountOwned$] = amountOwned;
    this[usdValue$] = usdValue;
    this[percentageChange$] = percentageChange;
    this[cryptoIcon$] = cryptoIcon;
    this[onTap$] = onTap;
    main.CryptoCard.__proto__.new.call(this);
    ;
  }).prototype = main.CryptoCard.prototype;
  dart.addTypeTests(main.CryptoCard);
  dart.addTypeCaches(main.CryptoCard);
  dart.setMethodSignature(main.CryptoCard, () => ({
    __proto__: dart.getMethods(main.CryptoCard.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.CryptoCard, I[0]);
  dart.setFieldSignature(main.CryptoCard, () => ({
    __proto__: dart.getFields(main.CryptoCard.__proto__),
    cryptoName: dart.finalFieldType(core.String),
    amountOwned: dart.finalFieldType(core.String),
    usdValue: dart.finalFieldType(core.String),
    percentageChange: dart.finalFieldType(core.String),
    cryptoIcon: dart.finalFieldType(icon_data.IconData),
    onTap: dart.finalFieldType(core.Function)
  }));
  var cryptoName$0 = dart.privateName(main, "DetailScreen.cryptoName");
  var cryptoIcon$0 = dart.privateName(main, "DetailScreen.cryptoIcon");
  main.DetailScreen = class DetailScreen extends framework.StatelessWidget {
    get cryptoName() {
      return this[cryptoName$0];
    }
    set cryptoName(value) {
      super.cryptoName = value;
    }
    get cryptoIcon() {
      return this[cryptoIcon$0];
    }
    set cryptoIcon(value) {
      super.cryptoIcon = value;
    }
    static ['_#new#tearOff'](opts) {
      let cryptoName = opts && 'cryptoName' in opts ? opts.cryptoName : null;
      let cryptoIcon = opts && 'cryptoIcon' in opts ? opts.cryptoIcon : null;
      return new main.DetailScreen.new({cryptoName: cryptoName, cryptoIcon: cryptoIcon});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new basic.Row.new({children: T.JSArrayOfWidget().of([new icon.Icon.new(this.cryptoIcon, {color: colors.Colors.grey._get(700), size: 32}), new basic.SizedBox.new({width: 8}), new text.Text.new(this.cryptoName + " Carteira", {style: new text_style.TextStyle.new({color: colors.Colors.grey._get(700), fontSize: 24, fontWeight: ui.FontWeight.bold})})])}), iconTheme: new icon_theme_data.IconThemeData.new({color: colors.Colors.grey._get(700)})}), body: new basic.Center.new({child: new basic.Padding.new({padding: C[1] || CT.C1, child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new icon.Icon.new(this.cryptoIcon, {size: 100, color: colors.Colors.grey._get(700)})])}), new basic.SizedBox.new({height: 20}), new text.Text.new(this.cryptoName, {style: new text_style.TextStyle.new({fontSize: 24, fontWeight: ui.FontWeight.bold, color: colors.Colors.grey._get(700)})}), new basic.SizedBox.new({height: 20}), new text.Text.new("Quantidade: 3.529020 " + this.cryptoName, {style: new text_style.TextStyle.new({fontSize: 20, color: colors.Colors.grey._get(700)})}), new text.Text.new("Valor em USD: $19,153", {style: new text_style.TextStyle.new({fontSize: 20, color: colors.Colors.grey._get(700)})}), new text.Text.new("Variação percentual: 8.23%", {style: new text_style.TextStyle.new({fontSize: 20, color: colors.Colors.green})})])})})})});
    }
  };
  (main.DetailScreen.new = function(opts) {
    let cryptoName = opts && 'cryptoName' in opts ? opts.cryptoName : null;
    let cryptoIcon = opts && 'cryptoIcon' in opts ? opts.cryptoIcon : null;
    this[cryptoName$0] = cryptoName;
    this[cryptoIcon$0] = cryptoIcon;
    main.DetailScreen.__proto__.new.call(this);
    ;
  }).prototype = main.DetailScreen.prototype;
  dart.addTypeTests(main.DetailScreen);
  dart.addTypeCaches(main.DetailScreen);
  dart.setMethodSignature(main.DetailScreen, () => ({
    __proto__: dart.getMethods(main.DetailScreen.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.DetailScreen, I[0]);
  dart.setFieldSignature(main.DetailScreen, () => ({
    __proto__: dart.getFields(main.DetailScreen.__proto__),
    cryptoName: dart.finalFieldType(core.String),
    cryptoIcon: dart.finalFieldType(icon_data.IconData)
  }));
  main.main = function main$0() {
    return binding.runApp(new main.MyApp.new());
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  crypto_font_icons.CryptoFontIcons = class CryptoFontIcons extends core.Object {
    static ['_#new#tearOff']() {
      return new crypto_font_icons.CryptoFontIcons.new();
    }
  };
  (crypto_font_icons.CryptoFontIcons.new = function() {
    ;
  }).prototype = crypto_font_icons.CryptoFontIcons.prototype;
  dart.addTypeTests(crypto_font_icons.CryptoFontIcons);
  dart.addTypeCaches(crypto_font_icons.CryptoFontIcons);
  dart.setLibraryUri(crypto_font_icons.CryptoFontIcons, I[1]);
  dart.setStaticFieldSignature(crypto_font_icons.CryptoFontIcons, () => ['ADC', 'AEON', 'AMP', 'ANC', 'ARDR', 'AUR', 'BAY', 'BCN', 'BRK', 'BRX', 'BSD', 'BTA', 'BTC', 'BTC_ALT', 'BTCD', 'BTS', 'CLAM', 'CLOAK', 'DASH', 'DCR', 'DGB', 'DGD', 'DGX', 'DMD', 'DOGE', 'EMC', 'ERC', 'ETC', 'ETH', 'FCT', 'FLO', 'FRK', 'FTC', 'GAME', 'GLD', 'GNT', 'GRC', 'GRS', 'HEAT', 'ICN', 'IFC', 'INCNT', 'IOC', 'KMD', 'KOBO', 'KORE', 'LBC', 'LDOGE', 'LSK', 'LTC', 'MAID', 'MINT', 'MONA', 'MUE', 'NEOS', 'NLG', 'NMC', 'NOTE', 'NUC', 'NXT', 'OK', 'OMNI', 'PINK', 'PIVX', 'POT', 'PPC', 'QRK', 'RBY', 'RDD', 'REP', 'RISE', 'SJCX', 'SLS', 'STEEM', 'STRAT', 'SYS', 'TRIG', 'UBQ', 'UNITY', 'USDT', 'VRC', 'VTC', 'WAVES', 'XCP', 'XEM', 'XMR', 'XRP', 'ZEC']);
  dart.defineLazy(crypto_font_icons.CryptoFontIcons, {
    /*crypto_font_icons.CryptoFontIcons.ADC*/get ADC() {
      return C[2] || CT.C2;
    },
    /*crypto_font_icons.CryptoFontIcons.AEON*/get AEON() {
      return C[3] || CT.C3;
    },
    /*crypto_font_icons.CryptoFontIcons.AMP*/get AMP() {
      return C[4] || CT.C4;
    },
    /*crypto_font_icons.CryptoFontIcons.ANC*/get ANC() {
      return C[5] || CT.C5;
    },
    /*crypto_font_icons.CryptoFontIcons.ARDR*/get ARDR() {
      return C[6] || CT.C6;
    },
    /*crypto_font_icons.CryptoFontIcons.AUR*/get AUR() {
      return C[7] || CT.C7;
    },
    /*crypto_font_icons.CryptoFontIcons.BAY*/get BAY() {
      return C[8] || CT.C8;
    },
    /*crypto_font_icons.CryptoFontIcons.BCN*/get BCN() {
      return C[9] || CT.C9;
    },
    /*crypto_font_icons.CryptoFontIcons.BRK*/get BRK() {
      return C[10] || CT.C10;
    },
    /*crypto_font_icons.CryptoFontIcons.BRX*/get BRX() {
      return C[11] || CT.C11;
    },
    /*crypto_font_icons.CryptoFontIcons.BSD*/get BSD() {
      return C[12] || CT.C12;
    },
    /*crypto_font_icons.CryptoFontIcons.BTA*/get BTA() {
      return C[13] || CT.C13;
    },
    /*crypto_font_icons.CryptoFontIcons.BTC*/get BTC() {
      return C[14] || CT.C14;
    },
    /*crypto_font_icons.CryptoFontIcons.BTC_ALT*/get BTC_ALT() {
      return C[15] || CT.C15;
    },
    /*crypto_font_icons.CryptoFontIcons.BTCD*/get BTCD() {
      return C[16] || CT.C16;
    },
    /*crypto_font_icons.CryptoFontIcons.BTS*/get BTS() {
      return C[17] || CT.C17;
    },
    /*crypto_font_icons.CryptoFontIcons.CLAM*/get CLAM() {
      return C[18] || CT.C18;
    },
    /*crypto_font_icons.CryptoFontIcons.CLOAK*/get CLOAK() {
      return C[19] || CT.C19;
    },
    /*crypto_font_icons.CryptoFontIcons.DASH*/get DASH() {
      return C[20] || CT.C20;
    },
    /*crypto_font_icons.CryptoFontIcons.DCR*/get DCR() {
      return C[21] || CT.C21;
    },
    /*crypto_font_icons.CryptoFontIcons.DGB*/get DGB() {
      return C[22] || CT.C22;
    },
    /*crypto_font_icons.CryptoFontIcons.DGD*/get DGD() {
      return C[23] || CT.C23;
    },
    /*crypto_font_icons.CryptoFontIcons.DGX*/get DGX() {
      return C[24] || CT.C24;
    },
    /*crypto_font_icons.CryptoFontIcons.DMD*/get DMD() {
      return C[25] || CT.C25;
    },
    /*crypto_font_icons.CryptoFontIcons.DOGE*/get DOGE() {
      return C[26] || CT.C26;
    },
    /*crypto_font_icons.CryptoFontIcons.EMC*/get EMC() {
      return C[27] || CT.C27;
    },
    /*crypto_font_icons.CryptoFontIcons.ERC*/get ERC() {
      return C[28] || CT.C28;
    },
    /*crypto_font_icons.CryptoFontIcons.ETC*/get ETC() {
      return C[29] || CT.C29;
    },
    /*crypto_font_icons.CryptoFontIcons.ETH*/get ETH() {
      return C[30] || CT.C30;
    },
    /*crypto_font_icons.CryptoFontIcons.FCT*/get FCT() {
      return C[31] || CT.C31;
    },
    /*crypto_font_icons.CryptoFontIcons.FLO*/get FLO() {
      return C[32] || CT.C32;
    },
    /*crypto_font_icons.CryptoFontIcons.FRK*/get FRK() {
      return C[33] || CT.C33;
    },
    /*crypto_font_icons.CryptoFontIcons.FTC*/get FTC() {
      return C[34] || CT.C34;
    },
    /*crypto_font_icons.CryptoFontIcons.GAME*/get GAME() {
      return C[35] || CT.C35;
    },
    /*crypto_font_icons.CryptoFontIcons.GLD*/get GLD() {
      return C[36] || CT.C36;
    },
    /*crypto_font_icons.CryptoFontIcons.GNT*/get GNT() {
      return C[37] || CT.C37;
    },
    /*crypto_font_icons.CryptoFontIcons.GRC*/get GRC() {
      return C[38] || CT.C38;
    },
    /*crypto_font_icons.CryptoFontIcons.GRS*/get GRS() {
      return C[39] || CT.C39;
    },
    /*crypto_font_icons.CryptoFontIcons.HEAT*/get HEAT() {
      return C[40] || CT.C40;
    },
    /*crypto_font_icons.CryptoFontIcons.ICN*/get ICN() {
      return C[41] || CT.C41;
    },
    /*crypto_font_icons.CryptoFontIcons.IFC*/get IFC() {
      return C[42] || CT.C42;
    },
    /*crypto_font_icons.CryptoFontIcons.INCNT*/get INCNT() {
      return C[43] || CT.C43;
    },
    /*crypto_font_icons.CryptoFontIcons.IOC*/get IOC() {
      return C[44] || CT.C44;
    },
    /*crypto_font_icons.CryptoFontIcons.KMD*/get KMD() {
      return C[45] || CT.C45;
    },
    /*crypto_font_icons.CryptoFontIcons.KOBO*/get KOBO() {
      return C[46] || CT.C46;
    },
    /*crypto_font_icons.CryptoFontIcons.KORE*/get KORE() {
      return C[47] || CT.C47;
    },
    /*crypto_font_icons.CryptoFontIcons.LBC*/get LBC() {
      return C[48] || CT.C48;
    },
    /*crypto_font_icons.CryptoFontIcons.LDOGE*/get LDOGE() {
      return C[49] || CT.C49;
    },
    /*crypto_font_icons.CryptoFontIcons.LSK*/get LSK() {
      return C[50] || CT.C50;
    },
    /*crypto_font_icons.CryptoFontIcons.LTC*/get LTC() {
      return C[51] || CT.C51;
    },
    /*crypto_font_icons.CryptoFontIcons.MAID*/get MAID() {
      return C[52] || CT.C52;
    },
    /*crypto_font_icons.CryptoFontIcons.MINT*/get MINT() {
      return C[53] || CT.C53;
    },
    /*crypto_font_icons.CryptoFontIcons.MONA*/get MONA() {
      return C[54] || CT.C54;
    },
    /*crypto_font_icons.CryptoFontIcons.MUE*/get MUE() {
      return C[55] || CT.C55;
    },
    /*crypto_font_icons.CryptoFontIcons.NEOS*/get NEOS() {
      return C[56] || CT.C56;
    },
    /*crypto_font_icons.CryptoFontIcons.NLG*/get NLG() {
      return C[57] || CT.C57;
    },
    /*crypto_font_icons.CryptoFontIcons.NMC*/get NMC() {
      return C[58] || CT.C58;
    },
    /*crypto_font_icons.CryptoFontIcons.NOTE*/get NOTE() {
      return C[59] || CT.C59;
    },
    /*crypto_font_icons.CryptoFontIcons.NUC*/get NUC() {
      return C[60] || CT.C60;
    },
    /*crypto_font_icons.CryptoFontIcons.NXT*/get NXT() {
      return C[61] || CT.C61;
    },
    /*crypto_font_icons.CryptoFontIcons.OK*/get OK() {
      return C[62] || CT.C62;
    },
    /*crypto_font_icons.CryptoFontIcons.OMNI*/get OMNI() {
      return C[63] || CT.C63;
    },
    /*crypto_font_icons.CryptoFontIcons.PINK*/get PINK() {
      return C[64] || CT.C64;
    },
    /*crypto_font_icons.CryptoFontIcons.PIVX*/get PIVX() {
      return C[65] || CT.C65;
    },
    /*crypto_font_icons.CryptoFontIcons.POT*/get POT() {
      return C[66] || CT.C66;
    },
    /*crypto_font_icons.CryptoFontIcons.PPC*/get PPC() {
      return C[67] || CT.C67;
    },
    /*crypto_font_icons.CryptoFontIcons.QRK*/get QRK() {
      return C[68] || CT.C68;
    },
    /*crypto_font_icons.CryptoFontIcons.RBY*/get RBY() {
      return C[69] || CT.C69;
    },
    /*crypto_font_icons.CryptoFontIcons.RDD*/get RDD() {
      return C[70] || CT.C70;
    },
    /*crypto_font_icons.CryptoFontIcons.REP*/get REP() {
      return C[71] || CT.C71;
    },
    /*crypto_font_icons.CryptoFontIcons.RISE*/get RISE() {
      return C[72] || CT.C72;
    },
    /*crypto_font_icons.CryptoFontIcons.SJCX*/get SJCX() {
      return C[73] || CT.C73;
    },
    /*crypto_font_icons.CryptoFontIcons.SLS*/get SLS() {
      return C[74] || CT.C74;
    },
    /*crypto_font_icons.CryptoFontIcons.STEEM*/get STEEM() {
      return C[75] || CT.C75;
    },
    /*crypto_font_icons.CryptoFontIcons.STRAT*/get STRAT() {
      return C[76] || CT.C76;
    },
    /*crypto_font_icons.CryptoFontIcons.SYS*/get SYS() {
      return C[77] || CT.C77;
    },
    /*crypto_font_icons.CryptoFontIcons.TRIG*/get TRIG() {
      return C[78] || CT.C78;
    },
    /*crypto_font_icons.CryptoFontIcons.UBQ*/get UBQ() {
      return C[79] || CT.C79;
    },
    /*crypto_font_icons.CryptoFontIcons.UNITY*/get UNITY() {
      return C[80] || CT.C80;
    },
    /*crypto_font_icons.CryptoFontIcons.USDT*/get USDT() {
      return C[81] || CT.C81;
    },
    /*crypto_font_icons.CryptoFontIcons.VRC*/get VRC() {
      return C[82] || CT.C82;
    },
    /*crypto_font_icons.CryptoFontIcons.VTC*/get VTC() {
      return C[83] || CT.C83;
    },
    /*crypto_font_icons.CryptoFontIcons.WAVES*/get WAVES() {
      return C[84] || CT.C84;
    },
    /*crypto_font_icons.CryptoFontIcons.XCP*/get XCP() {
      return C[85] || CT.C85;
    },
    /*crypto_font_icons.CryptoFontIcons.XEM*/get XEM() {
      return C[86] || CT.C86;
    },
    /*crypto_font_icons.CryptoFontIcons.XMR*/get XMR() {
      return C[87] || CT.C87;
    },
    /*crypto_font_icons.CryptoFontIcons.XRP*/get XRP() {
      return C[88] || CT.C88;
    },
    /*crypto_font_icons.CryptoFontIcons.ZEC*/get ZEC() {
      return C[89] || CT.C89;
    }
  }, false);
  crypto_font_icon_data.CryptoFontIconData = class CryptoFontIconData extends icon_data.IconData {
    static ['_#new#tearOff'](codePoint) {
      return new crypto_font_icon_data.CryptoFontIconData.new(codePoint);
    }
  };
  (crypto_font_icon_data.CryptoFontIconData.new = function(codePoint) {
    crypto_font_icon_data.CryptoFontIconData.__proto__.new.call(this, codePoint, {fontFamily: "CryptoFont", fontPackage: "crypto_font_icons"});
    ;
  }).prototype = crypto_font_icon_data.CryptoFontIconData.prototype;
  dart.addTypeTests(crypto_font_icon_data.CryptoFontIconData);
  dart.addTypeCaches(crypto_font_icon_data.CryptoFontIconData);
  dart.setLibraryUri(crypto_font_icon_data.CryptoFontIconData, I[2]);
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:crypto_font_icons/crypto_font_icons.dart": crypto_font_icons,
    "package:crypto_font_icons/crypto_font_icon_data.dart": crypto_font_icon_data
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/pub/.pub_cache/hosted/pub.dev/crypto_font_icons-1.0.1/lib/crypto_font_icons.dart","/zapp/pub/.pub_cache/hosted/pub.dev/crypto_font_icons-1.0.1/lib/crypto_font_icon_data.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    crypto_font_icons: crypto_font_icons,
    crypto_font_icon_data: crypto_font_icon_data
  };
}));

//# sourceMappingURL=main.js.map
